package Formularios;

import dao.NaveDaoJDBC;
import dao.TipoNaveDaoJDBC;
import dao.Utilidades;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelDTO.NaveDTO;
import modelDTO.TipoNaveDTO;

/**
 *
 * @author Perea
 */
public class frmCrearNave extends javax.swing.JInternalFrame {

    Utilidades utilidades = new Utilidades();
    TipoNaveDaoJDBC miTipo = new TipoNaveDaoJDBC();
    NaveDaoJDBC miNave = new NaveDaoJDBC();
    DefaultTableModel miTabla = new DefaultTableModel();

    public frmCrearNave() throws SQLException {
        initComponents();
        llenarComboBox();
        llenarTabla();
        txtCapPasajeros.setVisible(false);
        lblCapPasajeros.setVisible(false);
    }

    //Metodo para llenar el combobox que permite la seleccion del tipo de nave
    public void llenarComboBox() throws SQLException {
        for (TipoNaveDTO tipo : miTipo.selectTipos()) {
            cmbTipo.addItem(tipo.getTipo_nave());
        }
    }

    //Metodo para llenar la tabla que muestra las naves
    public void llenarTabla() {
        String[] cabecera = {"Id", "Nombre", "Tipo de nave", "Peso", "Tipo de combustible", "Empuje", "Cap. Pasajeros"};
        miTabla = new DefaultTableModel(null, cabecera);

        String tabla[] = new String[7];
        miTabla.setRowCount(0);

        try {
            for (NaveDTO nave : miNave.selectNaves()) {
                tabla[0] = String.valueOf(nave.getIdNave());
                tabla[1] = nave.getNombreNave();
                tabla[2] = miTipo.selectNameById(nave.getTipoNave());
                tabla[3] = String.valueOf(nave.getPesoNave());
                tabla[4] = nave.getCombustible();
                tabla[5] = String.valueOf(nave.getEmpuje());
                tabla[6] = String.valueOf(nave.getCapPasajeros());
                miTabla.addRow(tabla);
            }
            tableNaves.setModel(miTabla);
        } catch (SQLException ex) {
            Logger.getLogger(frmCrearNave.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblCapPasajeros = new javax.swing.JLabel();
        txtCapPasajeros = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtPeso = new javax.swing.JTextField();
        txtTipoComb = new javax.swing.JTextField();
        txtEmpuje = new javax.swing.JTextField();
        cmbTipo = new javax.swing.JComboBox<>();
        btnCrearNave = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableNaves = new javax.swing.JTable();

        setClosable(true);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("CREAR MI NAVE");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Nombre:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Tipo de nave:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Tipo combustible:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Peso:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Empuje:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, -1, -1));

        lblCapPasajeros.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblCapPasajeros.setText("Capacidad de pasajeros:");
        jPanel2.add(lblCapPasajeros, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, -1, -1));
        jPanel2.add(txtCapPasajeros, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 120, 200, -1));
        jPanel2.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 200, -1));
        jPanel2.add(txtPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 200, -1));
        jPanel2.add(txtTipoComb, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 60, 200, -1));
        jPanel2.add(txtEmpuje, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, 200, -1));

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar tipo de nave" }));
        cmbTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoItemStateChanged(evt);
            }
        });
        jPanel2.add(cmbTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 200, -1));

        btnCrearNave.setBackground(new java.awt.Color(102, 102, 102));
        btnCrearNave.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnCrearNave.setForeground(new java.awt.Color(255, 255, 255));
        btnCrearNave.setText("CREAR NAVE");
        btnCrearNave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearNaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnCrearNave, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, 140, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 780, 250));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableNaves.setBackground(new java.awt.Color(102, 153, 255));
        tableNaves.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tableNaves.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableNaves.setRowHeight(40);
        jScrollPane1.setViewportView(tableNaves);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 760, 240));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 780, 260));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearNaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearNaveActionPerformed
        if (txtNombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Debe digitar el nombre de la nave");
            txtNombre.requestFocusInWindow();
            return;
        }

        if (cmbTipo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Debe escoger un tipo de nave valido");
            cmbTipo.requestFocusInWindow();
            return;
        }

        if (txtPeso.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Debe digitar el peso");
            txtPeso.requestFocusInWindow();
            return;
        }

        if (txtTipoComb.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Debe digitar el tipo de combustible");
            txtTipoComb.requestFocusInWindow();
            return;
        }

        if (txtEmpuje.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Debe digitar el empuje de la nave");
            txtEmpuje.requestFocusInWindow();
            return;
        }

        if (!cmbTipo.getSelectedItem().equals("No tripuladas")) {
            if (txtCapPasajeros.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Debe digitar la capacidad de pasajeros");
                txtCapPasajeros.requestFocusInWindow();
                return;
            }
            if (!utilidades.isInteger(txtCapPasajeros.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Debe digitar un valor numerico en el campo capacidad pasajeros");
                txtCapPasajeros.requestFocusInWindow();
                return;
            }
        }

        if (!utilidades.isInteger(txtPeso.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Debe digitar un valor numerico en el campo peso");
            txtPeso.requestFocusInWindow();
            return;
        }

        if (!utilidades.isInteger(txtEmpuje.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Debe digitar un valor numerico en el campo empuje");
            txtEmpuje.requestFocusInWindow();
            return;
        }

        String nombreNave = txtNombre.getText();
        int tipoNave = 0;
        try {
            tipoNave = miTipo.selectIdByName(String.valueOf(cmbTipo.getSelectedItem()));

        } catch (SQLException ex) {
            Logger.getLogger(frmCrearNave.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int pesoNave = Integer.valueOf(txtPeso.getText());
        String tipoCombustible = txtTipoComb.getText();
        int empuje = Integer.valueOf(txtEmpuje.getText());
        int cantPasajeros;

        if (cmbTipo.getSelectedItem().equals("No tripuladas")) {
            cantPasajeros = 0;
        } else{
            cantPasajeros = Integer.valueOf(txtCapPasajeros.getText());
        }
        
        try {
            if(miNave.selectNaves().size() == 13){
                JOptionPane.showMessageDialog(rootPane, "Se ha alcanzado el limite de naves (13)");
                return;
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmCrearNave.class.getName()).log(Level.SEVERE, null, ex);
        }

        NaveDTO nave = new NaveDTO(nombreNave, tipoNave, pesoNave, tipoCombustible, empuje, cantPasajeros);
        try {
            miNave.insertNave(nave);

        } catch (SQLException ex) {
            Logger.getLogger(frmCrearNave.class.getName()).log(Level.SEVERE, null, ex);
        }

        llenarTabla();
        JOptionPane.showMessageDialog(rootPane, "Se ha registrado la nave satisfactoriamente!");

        txtNombre.setText("");
        cmbTipo.setSelectedIndex(0);
        txtPeso.setText("");
        txtTipoComb.setText("");
        txtEmpuje.setText("");
        txtCapPasajeros.setText("");
    }//GEN-LAST:event_btnCrearNaveActionPerformed

    //Metodo para saber cuando el combobox ha sido seleccionado y segun la seleccion habilitar o no el textfield
    private void cmbTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED && !cmbTipo.getSelectedItem().equals("No tripuladas")) {
            this.txtCapPasajeros.setVisible(true);
            lblCapPasajeros.setVisible(true);
        } else if(evt.getStateChange() == java.awt.event.ItemEvent.SELECTED && cmbTipo.getSelectedItem().equals("No tripuladas")){
            this.txtCapPasajeros.setVisible(false);
            lblCapPasajeros.setVisible(false);        
        }
    }//GEN-LAST:event_cmbTipoItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearNave;
    private javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCapPasajeros;
    private javax.swing.JTable tableNaves;
    private javax.swing.JTextField txtCapPasajeros;
    private javax.swing.JTextField txtEmpuje;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPeso;
    private javax.swing.JTextField txtTipoComb;
    // End of variables declaration//GEN-END:variables
}
